buildscript {
	repositories {
		jcenter()
		maven {
			url "http://bar.ebi.ac.uk:8081/artifactory/repo/"
		}
	}
	dependencies {
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
}

apply plugin: 'war'
apply plugin: 'com.palantir.docker'
apply plugin: 'io.spring.dependency-management'


group = 'uk.ac.ebi.ge'
version = '0.0.1'

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
	jcenter()
	maven {
		url "http://bar.ebi.ac.uk:8081/artifactory/repo/"
	}
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'mysql:mysql-connector-java'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'uk.ac.ebi.ge:atlas-web-core:1.0.0-SNAPSHOT'
	implementation 'javax.inject:javax.inject:1'
	implementation 'org.springframework.boot:spring-boot-starter-data-solr'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'com.google.guava:guava:27.1-jre'
	implementation 'org.springframework:spring-jdbc:5.1.5.RELEASE'
	implementation 'org.postgresql:postgresql:42.2.5.jre7'
	implementation 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.200'
	implementation 'com.google.code.gson:gson:2.8.5'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.1'
	testImplementation 'org.mockito:mockito-core:2.25.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.25.1'
}

task unpack(type: Copy) {
	dependsOn bootWar
	from(zipTree(tasks.bootWar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/atlas"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}

apply from: "build-profiles/profile-dev.gradle"

processResources {
	from('src/main/resources')

	filesMatching(['*.properties']) {
		expand(
//				jdbcUrl: jdbcUrl,
				jdbcUsername: jdbcUsername,
				jdbcPassword: jdbcPassword,
				dataFilesLocation: dataFilesLocation,
				projectBuildDirectory: buildDir,
				testLogs: testLogs,
				zkHost: zkHost,
				zkPort: zkPort,
				solrHost: solrHost,
				solrPort: solrPort

		)
	}
}

processTestResources {
	from('src/main/resources')

	filesMatching(['*.properties']) {
		expand(
//				jdbcUrl: jdbcUrl,
				jdbcUsername: jdbcUsername,
				jdbcPassword: jdbcPassword,
				dataFilesLocation: dataFilesLocation,
				projectBuildDirectory: buildDir,
				testLogs: testLogs,
				zkHost: zkHost,
				zkPort: zkPort,
				solrHost: solrHost,
				solrPort: solrPort
		)
	}
}